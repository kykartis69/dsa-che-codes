#include<iostream>
using namespace std;
class String
{
	char s1[20];
	char s2[20];
	char s3[30];
	int i,j,k,x,b,l1=0,l2=0,l3=0;
public:
	void getdata();
	void length();
	void copy();
	void reverse();
	void concadinate();
	void compare();
	void substring();
	void palindrome();
};
	void String::getdata()
	{
	cout<<"enter string 1";
	cin>>s1;
	cout<<"enter string 2";
	cin>>s2;
	}
	void String::length()
	{
	for(int i=0;s1[i]!='\0';i++)
		l1++;
	cout<<"length of string 1="<<l1;
	for(int i=0;s2[i]!='\0';i++)
			l2++;
		cout<<"\nlength of string 2="<<l2;
	}
	void String::copy()
	{
	for(i=0;s1[i]!='\0';i++)
		s3[i]=s1[i];
	}
	void String::reverse()
	{
	j=l1-1;
	for(i=0;i<l1;i++,j--)
		s3[j]=s1[i];
	s3[j]='\0';
	cout<<"\nthe reversed string 1 is "<<s3;
	}
	void String::concadinate()
	{
	for(i=0;i<l1;i++)
		s3[i]=s1[i];
	for(k=0;k<l2;k++,i++)
		s3[i]=s2[k];
	s3[i]='\0';
	cout<<"\nthe concadinated string is "<<s3;
	}
	void String::compare()
	{
	if(l1==l2)
	{
		for(i=0;i<l1;i++)
		{
			if(s1[i]!=s2[i])
			{
				cout<<"\nstrings are not equal";
			}
		}
		if(i==l1)
			cout<<"\nstrings are equal";
	}
	}
void String::substring()
{
	j=0;
	for(i=0;i<l1;i++)
	{
		if(s1[i]==s2[j])
		{
			x=i;
			for(j=1;j<l2;j++)
			{
				if(s1[i+j]!=s2[j])
					break;
			}
			if(j==l2)
			{
				break;
			}
		}
	}
		if(j==l2)
				{

				cout<<"\nenter the string with which u want to replace the substring";
				cin>>s3;
				for( i=0;s3[i]!='\0';i++);
						l3=i;
				if(l2==l3)
				{
					for(i=x,j=0;j<l2;i++,j++)
					s1[i]=s3[j];

				cout<<"\n substring replaced:"<<s1;
				}
				else if(l3>l2)
				{
					b=l3-l2;
					for(i=l1+b;i>x-1;i--)
						s1[i+b]=s1[i];
					for(i=x,j=0;j<l3;i++,j++)
							s1[i]=s3[j];
						cout<<s1;

				}
				else if(l2>l3)
				{
					b=l2-l3;
					for(i=x,j=0;j<l3;i++,j++)
						s1[i]=s3[j];
					for(i=x+l3;i<l1-1;i++)
						s1[i]=s1[i+b];
					s1[i]='\0';
					cout<<s1;
				}

			}
			else
				cout<<"\nsubstring not present";


}
void String::palindrome()
{int count=0;
	j=l1-1;
		for(i=0;i<l1;i++,j--)
			s3[j]=s1[i];
		s3[j]='\0';
		for(i=0;i<l1;i++)
				{
					if(s1[i]==s3[i])
					{
						count++;
					}
					else
					{cout<<"\nstring 1 is not a palindrome";
						break;
						}
				}
				if(count==l1)
					cout<<"\nstring 1 is a palindrome";

}
	int main()
	{String a;
	a.getdata();
	a.length();
	a.copy();
	a.reverse();
	a.compare();
	a.concadinate();
	a.substring();
	a.palindrome();
	}
